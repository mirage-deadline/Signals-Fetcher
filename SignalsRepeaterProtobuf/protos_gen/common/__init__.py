# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: common/common_data.proto, common/empty.proto, common/idea.proto, common/trader.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class FuturesTypeEnum(betterproto.Enum):
    FUTURES_COIN_M = 0
    FUTURES_USD_M = 1


class FetchDataSource(betterproto.Enum):
    DATA_SOURCE_TRADEWAGON = 0
    DATA_SOURCE_BINANCE = 1


class DataMarketEnum(betterproto.Enum):
    DATA_MARKET_CRYPTO = 0
    DATA_MARKET_STOCKS = 1


class IdeaStatusEnum(betterproto.Enum):
    IDEA_STATUS_OPENED = 0
    IDEA_STATUS_CLOSED = 1


class IdeaDirectionTypeEnum(betterproto.Enum):
    SHORT = 0
    LONG = 1


@dataclass(eq=False, repr=False)
class FetchedIdea(betterproto.Message):
    open_price: float = betterproto.float_field(1)
    idea_id: str = betterproto.string_field(2)
    leverage: int = betterproto.int32_field(3)
    close_price: float = betterproto.float_field(4)
    symbol: str = betterproto.string_field(5)
    trader_id: str = betterproto.string_field(6)
    source: "FetchDataSource" = betterproto.enum_field(7)
    status: "IdeaStatusEnum" = betterproto.enum_field(8)
    market: "DataMarketEnum" = betterproto.enum_field(9)
    direction: "IdeaDirectionTypeEnum" = betterproto.enum_field(10)
    trader_winrate: float = betterproto.float_field(11)


@dataclass(eq=False, repr=False)
class FetchedIdeasTransaction(betterproto.Message):
    fetched_ideas: List["FetchedIdea"] = betterproto.message_field(1)
    first_sending: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FetchedTrader(betterproto.Message):
    trader_id: str = betterproto.string_field(1)
    total_roi: float = betterproto.float_field(2)
    total_pnl: float = betterproto.float_field(3)
    win_rate: float = betterproto.float_field(4)
    private: bool = betterproto.bool_field(5)
    last_month_pnl: float = betterproto.float_field(6)
    last_month_roi: float = betterproto.float_field(7)
    mean_deal_pnl: float = betterproto.float_field(8)


@dataclass(eq=False, repr=False)
class FetchedTradersTransaction(betterproto.Message):
    fetched_traders: List["FetchedTrader"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Empty(betterproto.Message):
    pass
